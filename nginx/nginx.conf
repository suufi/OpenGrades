http {
        upstream nextjs {
                server nextjs:3000;
        }
        
        server {
                listen 80;
                server_name localhost;
                
                return 301 https://$host$request_uri;
        }

        server {
                listen 443 ssl;
                server_name localhost;
                
                server_tokens off;

                ssl_certificate /etc/letsencrypt/live/opengrades.mit.edu/fullchain.pem;
                ssl_certificate_key /etc/letsencrypt/live/opengrades.mit.edu/privkey.pem;

                location / {
                        try_files $uri $uri/ @nextjs;
                }
                
                location @nextjs {
                        # proxy_set_header Host $host;
                        # proxy_set_header X-Real-IP $remote_addr;
                        # proxy_set_header X-Forwarded-Ssl on;
                        # proxy_set_header Host $http_host;
                        # proxy_redirect off;
                        # proxy_pass http://nextjs:3000;
                        # proxy_http_version 1.1;
                        # proxy_set_header Upgrade $http_upgrade;
                        # proxy_set_header Connection 'upgrade';
                        # proxy_cache_bypass $http_upgrade;
                        # proxy_set_header X-Forwarded-Proto $scheme;
                        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        # proxy_set_header X-Forwarded-Host $host;
                        # proxy_cookie_path / "/; HTTPOnly; Secure";
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto https;
                        proxy_set_header X-Forwarded-Ssl on;
                        proxy_set_header Host $http_host;
                        proxy_redirect off;
                        proxy_pass http://nextjs;
                        proxy_cookie_path / "/; HTTPOnly; Secure";
                        
                }
        }
}