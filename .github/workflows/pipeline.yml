name: Docker Build & Publish

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build Docker
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code 🛎️
        uses: actions/checkout@v4

      - name: Set up Docker Buildx 🚀
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: docker compose -f docker-compose.yml build

      - name: Login to Docker Hub 🚢
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME}}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN}}

      - name: Build and push 🏗️
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME}}/mitopengrades:${{ github.sha }}
            ${{ secrets.DOCKER_HUB_USERNAME}}/mitopengrades:latest

          secrets: |
             "MONGODB_CONNECTION_URI=${{ secrets.MONGODB_CONNECTION_URI }}"
             "MIT_OIDC_WELLKNOWN=${{ secrets.MIT_OIDC_WELLKNOWN }}"
             "MIT_OIDC_CLIENT_ID=${{ secrets.MIT_OIDC_CLIENT_ID }}"
             "MIT_OIDC_CLIENT_SECRET=${{ secrets.MIT_OIDC_CLIENT_SECRET }}"
             "MIT_OIDC_AUTHORIZATION_ENDPOINT=${{ secrets.MIT_OIDC_AUTHORIZATION_ENDPOINT }}"
             "MIT_OIDC_ISSUER=${{ secrets.MIT_OIDC_ISSUER }}"
             "MIT_API_CLIENT_ID=${{ secrets.MIT_API_CLIENT_ID }}"
             "MIT_API_CLIENT_SECRET=${{ secrets.MIT_API_CLIENT_SECRET }}"
             "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}"
             "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}"

  deploy: 
    name: Deploy Image
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Create .env file
        run: |
          echo "MONGODB_CONNECTION_URI=${{ secrets.MONGODB_CONNECTION_URI }}" >> .env
          echo "MIT_OIDC_WELLKNOWN=${{ secrets.MIT_OIDC_WELLKNOWN }}" >> .env
          echo "MIT_OIDC_CLIENT_ID=${{ secrets.MIT_OIDC_CLIENT_ID }}" >> .env
          echo "MIT_OIDC_CLIENT_SECRET=${{ secrets.MIT_OIDC_CLIENT_SECRET }}" >> .env
          echo "MIT_OIDC_AUTHORIZATION_ENDPOINT=${{ secrets.MIT_OIDC_AUTHORIZATION_ENDPOINT }}" >> .env
          echo "MIT_OIDC_ISSUER=${{ secrets.MIT_OIDC_ISSUER }}" >> .env
          echo "MIT_API_CLIENT_ID=${{ secrets.MIT_API_CLIENT_ID }}" >> .env
          echo "MIT_API_CLIENT_SECRET=${{ secrets.MIT_API_CLIENT_SECRET }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env

      - name: List files in the root for debugging
        run: ls -la

      - name: Copy docker-compose.yml to the server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            docker-compose.yml
            .env
          target: /home/suufi/.deploy

      - name: Verify files on the server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            ls -la /home/suufi/.deploy

      - name: Connect and deploy to server
        uses: appleboy/ssh-action@master
        env:
          MONDODB_CONNECTION_URI: ${{ secrets.MONGODB_CONNECTION_URI }}
          MIT_OIDC_WELLKNOWN: ${{ secrets.MIT_OIDC_WELLKNOWN }}
          MIT_OIDC_CLIENT_ID: ${{ secrets.MIT_OIDC_CLIENT_ID }}
          MIT_OIDC_CLIENT_SECRET: ${{ secrets.MIT_OIDC_CLIENT_SECRET }}
          MIT_OIDC_AUTHORIZATION_ENDPOINT: ${{ secrets.MIT_OIDC_AUTHORIZATION_ENDPOINT }}
          MIT_OIDC_ISSUER: ${{ secrets.MIT_OIDC_ISSUER }}
          MIT_API_CLIENT_ID: ${{ secrets.MIT_API_CLIENT_ID }}
          MIT_API_CLIENT_SECRET: ${{ secrets.MIT_API_CLIENT_SECRET }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/mitopengrades:${{ github.sha }}
            docker-compose --env-file .deploy/.env -f .deploy/docker-compose.yml up -d